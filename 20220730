#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
//int main()//算数操作符（+-*/%）加减乘除取模（取余）
//{
//	int a = 5 / 2;
//	printf("a=%d\n", a);//整数输出
//	{
//		float b = 5 / 2.0;//5或2含有小数，则可以输出小数
//		printf("b=%f\n", b);//带小数输出
//		{
//			int c = 5 % 2;
//			printf("c=%d\n", c);//%取模（取余）输出余数
//		}
//	}
//	return 0;
//}

//int main()//位操作符
//{
//	//左移右移操作符移动的是二进制位
//	int a = 2;//2的二进制是10,整型4个字节，32个比特位，32位是00000000000000000000000000000010
//	int b = a << 1;//左移，右面补0，变成100
//	printf("%d\n", b);//100转成十进制是4
//	return 0;
//}
//复合赋值 +=  -=  *=  /=  &=   ^=  |=  >>=
//int a=a+3   =   int a+=3
//int a=a-3   =   int a-=3
//int a=a*3   =   int a*=3
//a+b,有两个操作数叫双目操作符
//一个操作数叫单目操作符
//单目操作符有
//    ！ 逻辑反操作
//    -  负值
//    +  正值
//    &  取地址
//    sizeof  操作数的类型长度（以字节为单位）
//    ~  对一个数的二进制按位取反
//    --  前置，后置--
//    ++  前置，后置++
//    *  间接访问操作符（解引用操作符）
//    (类型)  (强制类型转换)

//int main()//!的作用，真变成假，假变成真
//{//C语言中，0代表假，非0代表真
//	int a = 2;
//	printf("%d\n", !a);
//	{
//		int b = 0;
//		printf("%d\n", !b);//非0默认为1
//	}
//	return 0;
//}

int main()//sizeof是一个操作符，不是函数，函数后面的括号不能省略
{//////////计算类型或者变量大小
	int a = 1;
	printf("%d\n", sizeof(int));
	printf("%d\n", sizeof(a));
	printf("%d\n", sizeof a);
	{//对数组的大小计算
		int arr[10] = { 0 };
		printf("%d\n", sizeof (arr));//10*4=40，一个int是4个字节
		printf("%d\n", sizeof arr);//操作符后面可以省略括号
		printf("%d\n", sizeof arr[0]);//第一个元素的大小，每个元素都是整型
		int sz = sizeof(arr) / sizeof(arr[0]);//定义sz为数组大小除以第一个元素大小
		printf("%d\n", sz);

	} 
	return 0;
}